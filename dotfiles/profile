# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

export GITAWAREPROMPT="$HOME/.bash/git-aware-prompt"
source $GITAWAREPROMPT/main.sh

# set a fancy prompt (non-color, unless we know we "want" color)
color_prompt="\[$bldgrn\]\u@\h\[$txtrst\]:\[$bldblu\]\w\[$txtrst\] \[$txtcyn\]\$git_branch\[$txtred\]\$git_dirty\[$txtrst\]"
case "$TERM" in
xterm-color|xterm-256color)
    export PS1="$color_prompt"
    ;;
xterm)
    export PS1="$color_prompt"
    ;;
screen)
    export PS1="$color_prompt"
    ;;
*)
    export PS1='\u@\h:\w'
    ;;
esac

rand() {
    printf $((  $1 *  RANDOM  / 32767   ))
}

rand_element () {
    local -a th=("$@")
    unset th[0]
    printf $'%s\n' "${th[$(($(rand "${#th[*]}")+1))]}"
}

# Emoji in prompt!!!
if [ $(uname -s) == "Darwin" ]; then
    starts="🌊 ⚡️ ☁️ ⭐️ 🌚 🌝 🌞 🌜 🌍 🌵 🌴 🍄 🎃 💻 📺 🛀 🚽 🛁 🎨 🎬 🎤 🎧 🎶 🎵 👾 🎲 ⚽️ 🏀 🏈 🚴 🏇 🏊 🏄 🏂 ☕️ 🍵 🍺 🍷 🍸 🍕 🍔 🍟 🍣 🍱 🍙 🍜 🍳 🍦 🍧 🍰 🍭 🍒 🍋 🍉 🍑 🍌 🍍 🍆 🏩 🌇 🌆 🏯 🏰 ⛺️ 🌄 🌅 🗽 🌃 🌉 🎢 ⛵️ 🚀 ✈️ 🚁 🚎 🚌 🚕 🚛 🚲 "
    endings="🐶 🐺 🐱 🐭 🐹 🐰 🐸 🐯 🐨 🐻 🐷 🐮 🐗 🐵 🐒 🐴 🐑 🐘 🐼 🐧 🐦 🐤 🐥 🐣 🐔 🐍 🐢 🐛 🐝 🐜 🐞 🐌 🐙 🐠 🐟 🐬 🐳 🐋 🐄 🐏 🐀 🐃 🐅 🐇 🐉 🐎 🐐 🐓 🐕 🐖 🐁 🐂 🐲 🐡 🐊 🐫 🐪 🐆 🐈 🐩 ⛄️ 🙈 🙉 🙊 💀 👽 💩 👾 👻 🎅"

    export PS1="$(rand_element $starts) $PS1$(rand_element $endings) "
else
    export PS1="$PS1\$ "
fi

#
# Include private defs (not in main file cuz this one's in my public github).
#
source $HOME/.private_profile

# Comment in the above and uncomment this below for a color prompt
#PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi

# enable color support of ls and also add handy aliases
#if [ "$TERM" != "dumb" ]; then
    #eval "`dircolors -b`"
    #alias ls='ls --color=always'
    #alias dir='ls --color=auto --format=vertical'
    #alias vdir='ls --color=auto --format=long'
#fi

# some more ls aliases
alias ls='ls -G'
alias ll='ls -l'
alias llh='ll -h'
#alias la='ls -A'
#alias l='ls -CF'

alias screen="screen -T xterm-color"
alias wsudo="sudo -u www-data"

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# Take in all the custom completions too.
for F in "$(ls ~/Dropbox/Documents/LinuxEnvironment/bash_completion/*.bash)"; do
    if [ -f "$F" ]; then
        . "$F"
    fi
done

export EDITOR=vim
export PATH=~/bin:~/scripts:/usr/local/sbin:/usr/local/bin:$PATH:/build/trees/bin

alias fin="if [ \$? = 0 ]; then ssh heewa@heewa-dev1 -t \"DISPLAY=:0.0 /usr/bin/notify-send 'Done' '$USER@$HOSTNAME' -i face-smile -t 1000000\"; true; else ssh heewa@heewa-dev1 -t \"DISPLAY=:0.0 /usr/bin/notify-send --urgency=critical 'Done FAILED' '$USER@$HOSTNAME' -i face-angry -t 1000000\"; false; fi"
#alias done="if [ \$? = 0 ]; then echo true; else echo false; fi"

#
# Aliases for remoting
#
alias go_heewa='mosh -ssh="ssh -i .ssh/macbookpro.pem" ubuntu@heewa.net "./run_screen.sh"'
export STITCH_TEST='ec2-184-73-18-43.compute-1.amazonaws.com'
export FRESH_DJANGO='50.56.92.160'

# AWS Tools need JAVA_HOME set to dir that contains the bin/java binary path.
export JAVA_HOME='/usr'

alias my-pivotal='pivotal_tools show stories --project-index=7 --for=heewabarfchin'


# Setting PATH for Python 2.7
# The orginal version is saved in .profile.pysave
#PATH="/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}"
#export PATH

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Go path
export GOROOT=$(brew --prefix go)/libexec
export GOBIN=$GOROOT/bin/
export GOPATH=$GOROOT:$HOME/src/JelloLabs/branded/go/
export PATH=$PATH:$GOBIN


# https://twitter.com/chris__martin/status/420992421673988096
alias such=git
alias very=git
alias wow='git status -sb'
